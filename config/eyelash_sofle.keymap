#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

&sk {
    /delete-property/ ignore-modifiers;

    quick-release;
    lazy;
};

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    hml: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_LEFT_HAND";
        bindings = <&sk>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59>;
        tapping-term-ms = <230>;
        flavor = "balanced";
        hold-trigger-on-release;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
    };

    hmr: homerow_mods_right {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_RIGHT_HAND";
        bindings = <&sk>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 26 27 28 29 30 31 39 40 41 42 43 44 53 54 55 56 57>;
        tapping-term-ms = <230>;
        flavor = "balanced";
        hold-trigger-on-release;
        quick-tap-ms = <175>;
        require-prior-idle-ms = <150>;
    };

    as_ht: autoshift_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "AUTOSHIFT_HOLD_TAP";
        bindings = <&shifted>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <220>;
        flavor = "tap-preferred";
    };

    lt_repeat: lt_repeat {
        compatible = "zmk,behavior-hold-tap";
        label = "LT_REPEAT";
        bindings = <&mo>, <&key_repeat>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
    };

    macros {
        shifted: shifted {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_SHIFT>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LEFT_SHIFT>;

            label = "SHIFTED";
        };

        as: as {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AS";
        };

        hyper: hyper {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LCTRL &kp LEFT_GUI &kp LALT>;
            label = "hyper";
        };

        meh: meh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT &kp LALT &kp LCTRL>;
            label = "MEH";
        };
    };

    combos {
        compatible = "zmk,combos";

        cmb_r_h1 {
            bindings = <&kp ESCAPE>;
            key-positions = <34 35>;
            require-prior-idle-ms = <50>;
        };

        cmb_r_b1 {
            bindings = <&kp MINUS>;
            key-positions = <22 34>;
        };

        cmb_r_b2 {
            bindings = <&kp EQUAL>;
            key-positions = <34 23>;
        };

        cmb_tab {
            bindings = <&kp TAB>;
            key-positions = <33 34>;
            timeout-ms = <35>;
            require-prior-idle-ms = <35>;
        };

        foo {
            bindings = <&kp ENTER>;
            key-positions = <21 22>;
            timeout-ms = <35>;
            require-prior-idle-ms = <50>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&none           &as N1        &as N2           &as N3        &as N4        &as N5    &kp UP_ARROW     &as N6       &as N7         &as N8            &as N9         &as N0            &none
&none           &kp Q         &kp W            &kp E         &kp R         &kp T     &kp DOWN_ARROW   &kp Y        &kp U          &kp I             &kp O          &kp P             &kp BACKSPACE
&kp TAB         &kp A         &lt 1 S          &kp D         &lt 2 F       &kp G     &kp LEFT_ARROW   &kp H        &kp J          &kp K             &kp L          &kp SEMICOLON     &kp APOS
&kp LEFT_SHIFT  &hml LCTRL Z  &hml LEFT_ALT X  &hml LMETA C  &hml LSHFT V  &kp B     &kp RIGHT_ARROW  &kp N        &hmr RSHIFT M  &hmr RMETA COMMA  &hmr RALT DOT  &hmr RCTRL SLASH  &sk RIGHT_SHIFT
&kp C_MUTE      &sk LCTRL     &sk LALT         &kp LGUI      &sk LSHFT     &sl 3     &kp ENTER        &lt 3 ENTER  &lt 2 SPACE    &kp BACKSPACE     &none          &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        Vi {
            bindings = <
&none  &none   &none   &none             &none              &none     &trans  &none   &none                     &none       &none                      &none       &trans
&none  &none   &none   &kp LG(GRAVE)     &hyper             &meh      &trans  &none   &kp LG(LEFT_BRACKET)      &kp RC(T)   &kp LG(RIGHT_BRACKET)      &none       &trans
&none  &none   &none   &kp LA(LC(LGUI))  &kp LC(SPACE)      &none     &trans  &none   &kp LC(RIGHT_BRACKET)     &kp LC(I)   &kp LC(O)                  &kp LS(F6)  &trans
&none  &none   &none   &kp LG(LS(J))     &kp LG(LS(SPACE))  &none     &trans  &none   &kp LG(LS(LEFT_BRACKET))  &kp LS(F6)  &kp LS(LG(RIGHT_BRACKET))  &none       &trans
&none  &trans  &trans  &trans            &trans             &trans    &trans  &trans  &trans                    &trans      &trans                     &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(EQUAL) LG(MINUS)>;
            label = "VI";
        };

        Navigation {
            bindings = <
&trans         &none           &none         &none                 &none               &none             &mmv MOVE_UP     &none       &none                 &none                    &none                    &none           &trans
&trans         &kp F12         &kp F7        &kp F8                &kp F9              &none             &mmv MOVE_DOWN   &kp DELETE  &none                 &kp UP_ARROW             &none                    &none           &trans
&trans         &kp F11         &kp F4        &kp F5                &kp F6              &msc SCRL_UP      &mmv MOVE_LEFT   &mkp MB1    &kp LEFT_ARROW        &kp DOWN                 &kp RIGHT                &none           &trans
&trans         &hml LCTRL F10  &hml LALT F1  &hml LEFT_COMMAND F2  &hml LEFT_SHIFT F3  &msc SCRL_DOWN    &mmv MOVE_RIGHT  &mkp MB2    &hmr LEFT_SHIFT HOME  &hmr LEFT_COMMAND PG_UP  &hmr LEFT_ALT PAGE_DOWN  &hmr LCTRL END  &trans
&kp C_AC_ZOOM  &trans          &trans        &trans                &trans              &kp LEFT_SHIFT    &mkp MB1         &kp ENTER   &trans                &trans                   &none                    &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        NUM {
            bindings = <
&trans  &none                         &none                    &none                   &none                        &none                   &mmv MOVE_UP     &none              &none                      &none                    &none                    &none             &kp DELETE
&trans  &none                         &kp GRAVE                &kp APOS                &kp COLON                    &kp LEFT_BRACKET        &mmv MOVE_DOWN   &kp RIGHT_BRACKET  &as N7                     &as N8                   &as N9                   &as N0            &trans
&trans  &none                         &kp COLON                &as EQUAL               &as MINUS                    &kp PIPE                &mmv MOVE_LEFT   &kp QUESTION       &as N4                     &as N5                   &as N6                   &as DOT           &trans
&trans  &hml LCTRL RIGHT_PARENTHESIS  &hml LALT RIGHT_BRACKET  &hml LGUI LEFT_BRACKET  &hml LSHFT LEFT_PARENTHESIS  &kp NON_US_BACKSLASH    &mmv MOVE_RIGHT  &kp SLASH          &hmr RIGHT_SHIFT NUMBER_1  &hmr RIGHT_GUI NUMBER_2  &hmr RIGHT_ALT NUMBER_3  &hmr RCTRL COMMA  &trans
&none   &trans                        &trans                   &trans                  &trans                       &sk LEFT_SHIFT          &mkp LCLK        &sk LEFT_SHIFT     &trans                     &sk LGUI                 &sk LALT                 &sk LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_NEXT C_PREVIOUS>;
        };

        System {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &none            &none
&none  &none  &none  &none  &none  &none    &none  &none            &none            &none            &none            &none            &none
&none  &none  &none  &none  &none  &none    &none  &none            &rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_OFF  &none            &none
&none  &none  &none  &none  &none  &none    &none  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD
&none  &none  &none  &none  &none  &none    &none  &none            &none            &none            &none            &none
            >;

            label = "System";
            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_5 {
            bindings = <
&trans  &trans     &trans    &trans    &trans     &trans    &trans  &trans  &trans     &trans         &trans  &trans  &trans
&trans  &trans     &trans    &hyper    &meh       &trans    &trans  &trans  &trans     &kp DELETE     &trans  &trans  &trans
&trans  &trans     &trans    &trans    &trans     &trans    &trans  &trans  &kp ENTER  &kp BACKSPACE  &trans  &trans  &trans
&trans  &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &trans  &trans  &trans     &trans         &trans  &trans  &trans
&trans  &trans     &trans    &trans    &trans     &trans    &trans  &trans  &trans     &trans         &trans  &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans       &trans       &trans       &trans       &trans                  &trans  &trans        &trans       &trans       &trans        &trans       &trans
&trans  &shifted N1  &shifted N2  &shifted N3  &shifted N4  &shifted N5             &trans  &shifted N6   &shifted N7  &shifted N8  &shifted N9   &shifted N0  &trans
&trans  &trans       &as GRAVE    &kp LS(SQT)  &as APOS     &kp PIPE                &trans  &kp QUESTION  &as MINUS    &as EQUAL    &kp LS(SEMI)  &trans       &trans
&trans  &sk LCTRL    &sk LALT     &sk LGUI     &sk LSHFT    &kp NON_US_BACKSLASH    &trans  &kp SLASH     &as LBKT     &as RBKT     &trans        &trans       &trans
&trans  &trans       &trans       &trans       &trans       &trans                  &trans  &trans        &trans       &trans       &trans        &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
